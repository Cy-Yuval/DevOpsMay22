# TODO good
# Git Basics (commit, diff, branches)

1.echo 1 >> abc.txt
2.red
3.green
4.echo 2 >> abc.txt
5.the color is the same, red
6.git diff
7.no change was staged
8.there is no revision or path 'stage2' in the working tree
9.git add -A
10.it prints the differences that were done since the last commit
11.git diff main # TODO `--staged` is missing
12.echo 3 >> abc.txt
13.yes, because there were no commits to main  # TODO No. The former shows the diff between index and main, the later shows diff between working tree to main (and we've just changed the working tree in step 12).
14.one is green with the staged changes and one is without
15.git restore abc.txt

# Resolve conflicts

1.git branch
2.git checkout -b feature/lambda_migration
3.git merge feature/version1
4.done
5.done
   1.
   2.
   3.
   4.
   5.
6.there are no commits after the fix

# TODO good
# Cherry picking

1.git checkout -b feature/lambda_migration2
2.
3.
    1.
    2.
4. .env, config.json
5. yes, because you might override critical changes


# TODO good
# Changes in working tree and switch branches

1.
2.echo take it easy >> take.txt
3.i should commit the changes and then checkout or stash the changes
4.
5.no
6.no, this means that force checkout doesn't save the uncommited changes before the checkout

# TODO good
# Reset

1.git checkout reset_question 
2.
   1.dosn't change the working tree
   2.reset the index but not the tree
   3.reset the index and the tree
   4.
3.


# TODO good
# Working with GitHub

1.
2.git remote add origin https://github.com/NRO1/git_ex.git
3.git push -u origin main
  git push -u origin dev
4.https://github.com/NRO1/git_ex
