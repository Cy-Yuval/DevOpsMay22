# Git Basics (commit, diff, branches)

1. echo 1 > abc.txt
2. The color is red.
3. After adding to the index, the color is green.
4. echo 2 >> abc.txt
5. The color is not different from the observed color in step 2.
6. git diff
7. Because the file needs to be committed.
8. The error is: "unknown revision or path not in the working tree", it prints it because stage2 is unknown path or file.
9. git add abc.txt
10. the command 'git diff' prints nothing because there is no difference between the working tree to the index.
11. git diff --staged
12. echo 3 >> abc.txt
13. The commands does not give the same output because "git diff --staged" shows the difference between index and main,
and the command "git diff main" shows the difference between the working tree and main.
14. It appears once for the first change we made to be committed and the second one for adding another change that hasn't
been staged.
15. git reset --hard

# Resolve conflicts

1. git branch
2. git checkout -b feature/lambda_migration
3. git merge feature/version1
4. Merged through Pycharm UI.
5. The conflict resolved through Pycharm UI.
   1. In the conflict tool I clicked on merge.
   2. Clicked on 'All'.
   3. I clicked on 'Annotate with Git Blame' in the right and the left panels.
   4. I Accepted John Doe's port number (8081), and denied Narayan's port (8082).
   5. I Accepted the function name of Narayan Nadella (get_profile_picture), and blocked John's name.
6.Yes, after all merges were completed, there are added commits for feature/lambda_migration.
The commits are the merge of branches 'feature/version1' & 'feature/version2' into 'feature/lambda_migration'.

# Cherry picking

1. New branch from main -> name it 'feature/lambda_migration2'.
2. Pycharm Git tab -> Log -> Branch -> 'feature/lambda_migration'.
3.
    1. Cherry picked "use correct lock type in reconnect()".
    2. Cherry picked "Restrict the extensions that can be disabled".
4. At the first cherry-pick the file '.env' has been added and at the second time the file 'config.json' has been added.
5. Yes, because we need to know that the file won't be overwritten.


# Changes in working tree and switch branches

1. I was in 'feature/lambda_migration2' branch.
2. echo some lines in it > take.txt
3. The error that I get is: "Untracked Files Prevent Checkout: Move or commit them before checkout".
The two approaches that suggested by git are to commit the changes or to stash them.
4. The prompted dialog didn't popped up, I used that command "git checkout -f dev".
5. No, that text in the file has been changed.
6. The file isn't there anymore, the force checkout throwing away local changes.

# Reset

1. git checkout reset_question
2. Explanation:
   1. uncommit changes, changes are left staged (index).
   2. uncommit + unstage changes, changes are left in working tree.
   3. uncommit + unstage + delete changes, nothing left.
   4. undoing changes to a repository's commit history.
3. HEAD~1 means: go back 1 commit from HEAD, using the first parent.


# Working with GitHub

1. I created new repository named: "WorkingWithGithub" through GitHub.
2. git remote add origin github.com/of1r/WorkingWithGithub.git
3. git push -u origin main
git push -u origin dev
4. https://github.com/of1r/WorkingWithGithub